services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: cslist_web
    restart: unless-stopped
    command: gunicorn config.wsgi:application --config=/app/gunicorn.conf.py --worker-class=sync
    volumes:
      - static_volume:/app/staticfiles
      - /www/wwwroot/cslist/media:/app/media
      - ./logs:/app/logs
    expose:
      - 8000
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=cslist.ineed.asia,www.cslist.ineed.asia
      - DB_NAME=${DB_NAME}
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/1
      - REDIS_HOST=redis
      - DATABASE_URL=postgres://postgres:${DB_PASSWORD}@db:5432/${DB_NAME}
      - CELERY_BROKER_URL=redis://redis:6379/2
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_TLS=True
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
      - MEDIA_URL=https://cslist.ineed.asia/media/
      - REQUIRE_INVITATION_CODE=${REQUIRE_INVITATION_CODE:-false}
    depends_on:
      - db
      - redis
    networks:
      - cslist_network

  celery_worker:
    build: .
    container_name: cslist_celery_worker
    restart: unless-stopped
    user: celery
    command: celery -A config worker --loglevel=INFO
    volumes:
      - ./logs/celery:/app/logs/celery
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/2
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      - redis
      - db
    networks:
      - cslist_network

  celery_beat:
    build: .
    container_name: cslist_celery_beat
    restart: unless-stopped
    user: celery
    command: celery -A config beat --loglevel=INFO --schedule=/app/celerybeat-data/celerybeat-schedule
    volumes:
      - ./logs/celery:/app/logs/celery
      - celerybeat_data:/app/celerybeat-data
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/2
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      - redis
      - db
    networks:
      - cslist_network

  db:
    image: postgres:15-alpine
    container_name: cslist_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - cslist_network

  redis:
    image: redis:7.0-alpine
    container_name: cslist_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - cslist_network



volumes:
  postgres_data:
    name: cslist_postgres_data
  redis_data:
    name: cslist_redis_data
  static_volume:
    name: cslist_static_volume
  celerybeat_data:
    name: cslist_celerybeat_data

networks:
  cslist_network:
    name: cslist_network 